<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.1.xsd"
        default-menu-title="Hazelcast Info">

    <actions>
        <set field="hzToolFactory" from="ec.factory.getToolFactory('Hazelcast')"/>
        <set field="hazelcastInstance" from="hzToolFactory?.getInstance()"/>
        <if condition="hazelcastInstance == null"><return error="true" message="Hazelcast Instance not found"/></if>

        <set field="cluster" from="hazelcastInstance.getCluster()"/>
        <set field="clusterState" from="cluster.getClusterState()"/>

        <set field="hzExecutorToolFactory" from="ec.factory.getToolFactory('HazelcastExecutor')"/>
        <set field="hzExecutor" from="hzExecutorToolFactory.getInstance()"/>
        <set field="hzExecutorStats" from="hzExecutor.getLocalExecutorStats()"/>
        <set field="executorStats" from="[:]"/>
        <set field="dciStats" from="[:]"/>
        <script><![CDATA[
                        import org.moqui.impl.service.ServiceCallAsyncImpl.AsyncServiceCallable
                        import com.hazelcast.cluster.Member
                        import java.util.concurrent.Future
                        def clusterMembers = cluster.getMembers()

                        for ( Member member : clusterMembers ) {
                            logger.info( "isLocalMember " + member.localMember() )
                            logger.info( "member.socketaddress " + member.getSocketAddress() )
                            AsyncServiceCallable callable = new AsyncServiceCallable(ec, "moqui.hazelcast.StatisticsServices.get#LocalExecutorStats", [:])
                            Future<Object> future = hzExecutor.submitToMember(callable, member)
                            def distResults =  future.get()
                            executorStats[member.getUuid()] = distResults

                            callable = new AsyncServiceCallable(ec, "moqui.hazelcast.StatisticsServices.get#EntityCacheDciStats", [:])
                            Future<Object> dciFuture = hzExecutor.submitToMember(callable, member)
                            def dciResults =  dciFuture.get()
                            dciStats[member.getUuid()] = dciResults
                          }
                        ]]>
        </script>
    </actions>
    <widgets>
        <container-row><row-col md="6">
            <label text="Cluster" type="strong"/>
            <container-row><row-col xs="1"/><row-col xs="3"><label text="State" type="strong"/></row-col>
                <row-col xs="8"><label text="${cluster.getClusterState()}"/></row-col></container-row>
            <container-row><row-col xs="1"/><row-col xs="3"><label text="Version" type="strong"/></row-col>
                <row-col xs="8"><label text="${cluster.getClusterVersion()}"/></row-col></container-row>
            <container-row><row-col xs="1"/><row-col xs="3">
                <label text="Members" type="strong"/>
            </row-col><row-col xs="8">
                <section-iterate name="ClusterMembers" list="cluster.getMembers()" entry="member">
                    <actions>
                        <set field="memberUuid" from="member.getUuid()"/>
                    </actions>
                    <widgets>
                    <label text="${member.getAddress()} - ${member.getVersion()}${member.localMember() ? ' (local)' : ''}" type="h3"/>
                    <container-row>
                        <row-col md="6">
                            <label text="Entity Cache DCI" type="strong"/>
                            <container-row><row-col xs="1"/><row-col xs="4"><label text="Published" type="strong"/></row-col>
                                <row-col xs="6"><label text="${ec.l10n.format(dciStats[memberUuid]['dciPublished'], '#,##0')}"/></row-col></container-row>
                            <container-row><row-col xs="1"/><row-col xs="4"><label text="Last Publish" type="strong"/></row-col>
                                <row-col xs="6"><label text="${ec.l10n.format(new Timestamp(dciStats[memberUuid].lastPublishedTime), null)}" condition="dciStats[memberUuid].dciPublished"/></row-col></container-row>
                            <container-row><row-col xs="1"/><row-col xs="4"><label text="Received" type="strong"/></row-col>
                                <row-col xs="6"><label text="${ec.l10n.format(dciStats[memberUuid].dciReceived, '#,##0')}"/></row-col></container-row>
                            <container-row><row-col xs="1"/><row-col xs="4"><label text="Last Receive" type="strong"/></row-col>
                                <row-col xs="6"><label text="${ec.l10n.format(new Timestamp(dciStats[memberUuid].lastReceivedTime), null)}" condition="dciStats[memberUuid].dciReceived"/></row-col></container-row>
                        </row-col><row-col md="6">
                        <label text="Executor Stats" type="strong"/>
                        <container-row><row-col xs="1"/><row-col xs="4"><label text="Pending" type="strong"/></row-col>
                            <row-col xs="6"><label text="${ec.l10n.format(executorStats[memberUuid]['pendingTaskCount'], '#,##0')}"/></row-col></container-row>
                        <container-row><row-col xs="1"/><row-col xs="4"><label text="Started" type="strong"/></row-col>
                            <row-col xs="6"><label text="${ec.l10n.format(executorStats[memberUuid]['startedTaskCount'], null)}" /></row-col></container-row>
                        <container-row><row-col xs="1"/><row-col xs="4"><label text="Completed" type="strong"/></row-col>
                            <row-col xs="6"><label text="${ec.l10n.format(executorStats[memberUuid]['completedTaskCount'], '#,##0')}"/></row-col></container-row>
                        <container-row><row-col xs="1"/><row-col xs="4"><label text="Total Start Latency" type="strong"/></row-col>
                            <row-col xs="6"><label text="${ec.l10n.format(executorStats[memberUuid]['totalStartLatency'], null)}" /></row-col></container-row>
                        </row-col>
                    </container-row>
                </widgets></section-iterate>
            </row-col></container-row>
        </row-col></container-row>
    </widgets>
</screen>
